
{/*
      <ApolloConsumer>
        {client => (
          <View>
            <Text>Hi
                       onClick={async () => {
                const { type, token } = await Expo.Facebook.logInWithReadPermissionsAsync('279793089219775', {
                  permissions: ['public_profile'],
                });
                if (type === 'success') {
                  const { data } = await client.mutation({
                    mutation: FACEBOOK_LOGIN,
                    variables: { token: {token} }
                  });
                  console.log(data);
                } else {
                  console.log('Evidently, the user cancelled.');
                }
              }} 
                //this.onLogin(data.result);
           > 
            </Text>
          </View>
        )}
      </ApolloConsumer>
*/}


              <Mutation mutation={FACEBOOK_LOGIN} skip={this.state.type !== 'success'} variables={{token: this.state.token}}>
                {({loading, error, data}) => {
                  if (loading) return 'loading...';
                  if (error) throw err;
                  return <h1>{data}</h1>
                }}
              </Mutation>

                  <Mutation mutation={FACEBOOK_LOGIN}>
                    {(loginFacebook, { data }) => {(
                      <FontAwesome
                        name="facebook"
                        size={Layout.moderateScale(25)}
                        style={{
                          color: Colors.fbbgicon,
                        }}
                        onPress={async () => {
                          const { type, token } = await Expo.Facebook.logInWithReadPermissionsAsync('279793089219775', {
                            permissions: ['public_profile'],
                          });
                          if (type === 'success') {
                            data = await loginFacebook({
                              variables: { token },
                            })
                            console.log(data);
                            //if (loading) return 'loading...';
                            //if (error) throw err;
                          }
                        }}
                      />
                    )}}
                  </Mutation>



                  <Mutation mutation={FACEBOOK_LOGIN}>
                    {(loginFacebook, { data }) => (



                          if (type === 'success') {
                            const data = await loginFacebook({
                              variables: { token: token },
                            })
                            console.log(data);
                          }


                    )}
                  </Mutation>
